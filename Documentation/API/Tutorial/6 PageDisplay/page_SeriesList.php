<?php
/**
 * class page_SeriesList 
 * <pre> 
 * Displays the list of Series in our tvaddicts application
 * </pre>
 * @author Johnny Hausman
 * Date:   18 Jan 2006
 */
class  page_SeriesList {

	//CONSTANTS:
	
	/** The list of fields to be displayed */
    const DISPLAY_FIELDS = 'series_title';
    

	//VARIABLES:
	
	/** @var [OBJECT] The viewer object. */
	protected $viewer;
	
    /** @var [STRING] The path to this module's root directory. */
	protected $pathModuleRoot;
	
	/** @var [OBJECT] The object for generating the data list. */
	protected $listManager;
	
	
	//CLASS CONSTRUCTOR
	//************************************************************************
	/**
	 * function __construct
	 * <pre>
	 * Initialize the object.
	 * </pre>
	 * @param $pathModuleRoot [STRING] The path to the module's root dir.
	 * @param $viewer [OBJECT] The viewer object.
	 * @param $sortBy [STRING] Field data to sort listManager by.
	 * @return [void]
	 */
    function __construct($pathModuleRoot, $viewer, $sortBy ) 
    {

        $this->pathModuleRoot = $pathModuleRoot;
        $this->viewer = $viewer;
        
        if ( $sortBy=='' )
        {
            $sortBy ='series_title';
        }
        
        $seriesManager = new RowManager_SeriesManager();
        $seriesManager->setSortOrder( $sortBy );
        $this->listManager = $seriesManager->getListIterator();
         
    }



	//CLASS FUNCTIONS:
	//************************************************************************
	/**
	 * function classMethod
	 * <
	 pre>
	 * [classFunction Description]
	 * </pre>
	 * <pre><code>
	 * [Put PseudoCode Here]
	 * </code></pre>
	 * @param $param1 [$param1 type][optional description of $param1]
	 * @param $param2 [$param2 type][optional description of $param2]
	 * @return [returnValue, can be void]
	 */
    function classMethod($param1, $param2) 
    {
        // CODE
    }	    
    
    
    
    //************************************************************************
	/**
	 * function getHTML
	 * <pre>
	 * This method returns the HTML data generated by this object.
	 * </pre>
	 * @return [STRING] HTML Display data.
	 */
    function getHTML() 
    {
    
        // Make a new Template object
        $path = $this->pathModuleRoot.'templates/';
        $this->template = new Template( $path );
        
        
        // store the field names being displayed
        $fieldNames = explode(',', page_SeriesList::DISPLAY_FIELDS);
        $this->template->set( 'dataFieldList', $fieldNames);
        
        
        // store the link values
        // $this->linkValues[ 'view' ] = 'add/new/href/data/here';
        $this->template->set( 'linkValues', $this->linkValues );
        
        
        // store Data to display as an Array
        $this->template->set( 'dataList', $this->listManager->getDataList() );
 
         
        // now load and return the template HTML
		return $this->template->fetch( 'page_SeriesList.tpl' );
        
    }
    
    
    
    //************************************************************************
	/**
	 * function setLinks
	 * <pre>
	 * Sets the value of the linkValues array.
	 * </pre>
	 * @param $links [ARRAY] Array of Link Values
	 * @return [void]
	 */
    function setLinks($links) 
    {
        $this->linkValues = $links;
    }
	
}

?>