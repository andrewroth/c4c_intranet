<?php
$pathFile = 'General/gen_Includes.php';
$extension = '';
    
// Attempt to find proper directory from current page to Root ...
$numAttempts = 0;
while ( (!file_exists($extension.$pathFile)) && ( $numAttempts < 5) ) {
    
    $extension = '../'.$extension;
    $numAttempts++; 
}

require ( $extension.$pathFile );

require( 'SeriesManager.php' );

// Need to define values as Global to be used between functions
$seriesID = '';
$seriesManager = '';





// These variables are used to dynamically define the fields to display on 
// the output display list.  Just add another field to the $displayFieldList
// (seperated by commas) to include it on your form. 
$formFieldList = 'series_id,series_title';
$formFields = explode( ',', $formFieldList);

// now we have arrays for the formValues and errors
$formValues = array();
$errors = array();


// now we drive the application by calling the loadData(), processData(), 
// and getHTML() routines
loadData();

// only need to check for form operations if this was a form Submission
if ( isset( $_REQUEST['submit']) ) {

    // if the form data was valid
    if ( isDataValid() ) {
    
        // then process the data
        processData();
    }
}

// now display the HTML
echo getHTML();


//************************************************************************
/** 
 * loadData()
 *
 * Here we load up all the data we need to run this web page.
 */
function loadData() 
{
    global $seriesID;
    global $seriesManager;
    global $formValues;
    global $formFields;

    
    // read in the expected seriesID from the querystring ...
    // if not set, default to -1
    $seriesID = -1;
    if ( isset( $_REQUEST[ 'seriesID' ] ) ) {
        $seriesID = $_REQUEST[ 'seriesID' ];
    }
    
    
    // Load in the requested SeriesManager from the DB
    $seriesManager = new RowManager_SeriesManager( $seriesID );
    
    // initialize the formValues from the data in the RowManager
    $formValues = $seriesManager->getArrayOfValues();
    
    // if the form was submitted, then load Form Data:
    if ( isset( $_REQUEST['submit']) ) {
    
        // step through each field
        for ($indx=0; $indx<count( $formFields ); $indx++) {
        
            $key = $formFields[ $indx ];
            
            // if field was found in form submission then
            if ( isset( $_REQUEST[ $key ]) ) {
                
                // update formValues with data from form
                $formValues[ $key ] = $_REQUEST[ $key ];
            }
        
        }
    }

}



//************************************************************************
/** 
 * Process the Data
 *
 * Here we perform the actions of this web page
 */
function processData() 
{
    global $seriesManager;
    global $formValues;

    // load the RowManager with the data submitted from the form.
    $seriesManager->loadFromArray( $formValues );
    $seriesManager->updateDBTable();

}



//************************************************************************
/** 
 * isDataValid()
 *
 * Here we check to see if the returned form values are correct.
 */
function isDataValid() 
{
    global $formFields;
    global $formValues;
    global $errors;

    $isValid = true;
    
     // step through each field
    for ($indx=0; $indx<count( $formFields ); $indx++) {

        $key = $formFields[ $indx ];
        
        // if field is empty then
        if ( $formValues[ $key ] == '') {
            
            // mark the error
            $isValid = false;
            $errors[ $key ] = $key.' can\'t be empty';
        }
        
    } // next field
    
    return $isValid;
}




//************************************************************************
/** 
 * getHTML()
 *
 * Returns the HTML generated by this page.
 */
function getHTML() 
{
    global $seriesID;
    global $formFields;
    global $formValues;
    global $errors;
    
    // Now we create a Template object 
    // NOTE: (optional parameter is to set the path to your template file )
    // ex   $template = new Template( "path/to/template/files/here.php" );
    // if you don't set it, it assumes the template is in the same directory
    // as your script.
    //
    $template = new Template( );
    
    // Now we pass/set the values of variables in the Template
    // 1st parameter is the name of the variable as it will be called in the template
    // 2nd parameter is the current variable that you want to pass in
    $template->set( 'formAction', 'ex_SeriesEdit_array.php?seriesID='.$seriesID );
    $template->set( 'formFields', $formFields );
    $template->set( 'formValues', $formValues );
    $template->set( 'formErrors', $errors);
    
    // now we get the HTML of the Template and display that for our page.
    return $template->fetch( 'ex_SeriesEdit_array.tpl' );

}


?>
