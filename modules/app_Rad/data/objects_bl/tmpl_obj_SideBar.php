<?php
/**
 * @package [ModuleName]
 */ 
/**
 * class [PageNamePrefix][PageName]
 * <pre> 
 * [PageDescription]
 * </pre>
 * @author [CreatorName]
 * Date:   [CreationDate]
 */
class  [PageNamePrefix][PageName] extends PageDisplay {

	//CONSTANTS:
	/** The XML root node name for this object */
    const MULTILINGUAL_PAGE_KEY = '[PageNamePrefix][PageName]';

	//VARIABLES:
	
	/** @var [STRING] The path to this module's root directory */
	protected $pathModuleRoot;
	
	/** @var [STRING] The path to the site's root directory */
	protected $pathToRoot;


	//CLASS CONSTRUCTOR
	//************************************************************************
	/**
	 * function __construct
	 * <pre>
	 * Initialize the [PageNamePrefix][PageName] Object.
	 * </pre>
	 * @param $modulePath [STRING] The path from the root directory to this 
	 * module's root directory.
	 * @param $rootPath [STRING] The path to the root directory 
	 * @param $viewer [OBJECT] The viewer object. 
	 * @return [void]
	 */
    function __construct( $modulePath, $rootPath, $viewer ) 
    {
        parent::__construct();
        
        $this->pathModuleRoot = $modulePath;
        $this->pathToRoot = $rootPath;
        
        // load any labels assigned to this page
        $languageID = $viewer->getLanguageID();
        $seriesKey = module[ModuleName]::MULTILINGUAL_SERIES_KEY;
        $pageKey = [PageNamePrefix][PageName]::MULTILINGUAL_PAGE_KEY;
        $this->labels = new MultilingualManager( $languageID, $seriesKey, $pageKey );

                        
    }



	//CLASS FUNCTIONS:
	//************************************************************************
	/**
	 * function classMethod
	 * <pre>
	 * [classFunction Description]
	 * </pre>
	 * <pre><code>
	 * [Put PseudoCode Here]
	 * </code></pre>
	 * @param $param1 [$param1 type][optional description of $param1]
	 * @param $param2 [$param2 type][optional description of $param2]
	 * @return [returnValue, can be void]
	 */
    function classMethod($param1, $param2) 
    {
        // CODE
    }	
    
    
    
    //************************************************************************
	/**
	 * function getHTML
	 * <pre>
	 * This method returns the HTML data generated by this object.
	 * </pre>
	 * @return [STRING] HTML Display data.
	 */
    function getHTML() 
    {
    
        $path = $this->pathModuleRoot.'[RAD_PATH_TEMPLATES]';
        
        
        $this->prepareTemplate( $path );
        
        
        // store the path to root.  Useful for accessing site images and
        // resources.
		$this->template->set( 'pathToRoot',$this->pathModuleRoot );
		
		// return the html from the commong display template
		return $this->template->fetch( '[PageNamePrefix][PageName].php' );
        
    }
	
}

?>