<?php
/**
 * @package cim_stats
 */ 
/**
 * class page_PRC_ReportByCampus 
 * <pre> 
 * PRCs reported by campus
 * </pre>
 * @author Russ Martin
 * Date:   14 Sep 2006
 */
 // RAD Tools: Custom Page
class  page_PRC_ReportByCampus extends PageDisplay {

	//CONSTANTS:
    
    /** The Multilingual Page Key for labels on this page */
    const MULTILINGUAL_PAGE_KEY = 'page_PRC_ReportByCampus';
    

	//VARIABLES:
	
	/** @var [OBJECT] The viewer object. */
	protected $viewer;
	
    /** @var [STRING] The path to this module's root directory. */
	protected $pathModuleRoot;
	
    protected $semester_id;


	//CLASS CONSTRUCTOR
	//************************************************************************
	/**
	 * function __construct
	 * <pre>
	 * Initialize the object.
	 * </pre>
	 * @param $pathModuleRoot [STRING] The path to the module's root dir.
	 * @param $viewer [OBJECT] The viewer object.
	 * @return [void]
	 */
    function __construct($pathModuleRoot, $viewer, $semesterID="" ) 
    {
    
        parent::__construct();
        
        // initialzie the object values
        $this->pathModuleRoot = $pathModuleRoot;
        $this->viewer = $viewer;
        
        $this->semester_id = $semesterID;
        if ( $semesterID == "" )
        {
            // TODO set this properly
            $this->semester_id = 4;
        }
        // echo 'semesterID['.$this->semester_id.']<br/>';
        
        // now initialize the labels for this page
        // start by loading the default field labels for this Module
        $languageID = $viewer->getLanguageID();
        $seriesKey = modulecim_stats::MULTILINGUAL_SERIES_KEY;
        $pageKey = page_PRC_ReportByCampus::MULTILINGUAL_PAGE_KEY;
        $this->labels = new MultilingualManager( $languageID, $seriesKey, $pageKey );

         
    }



	//CLASS FUNCTIONS:
	//************************************************************************
	/**
	 * function classMethod
	 * <pre>
	 * [classFunction Description]
	 * </pre>
	 * <pre><code>
	 * [Put PseudoCode Here]
	 * </code></pre>
	 * @param $param1 [$param1 type][optional description of $param1]
	 * @param $param2 [$param2 type][optional description of $param2]
	 * @return [returnValue, can be void]
	 */
    function classMethod($param1, $param2) 
    {
        // CODE
    }	
    
    
    
    //************************************************************************
	/**
	 * function getHTML
	 * <pre>
	 * This method returns the HTML data generated by this object.
	 * </pre>
	 * @return [STRING] HTML Display data.
	 */
    function getHTML() 
    {

        // Uncomment the following line if you want to create a template 
        // tailored for this page:
        $path = $this->pathModuleRoot.'templates/';
        // Otherwise use the standard Templates for the site:
        //$path = SITE_PATH_TEMPLATES;
        

        /*
         * Update any label tags ...
         */
        // example:
            // $name = $user->getName();
            // $this->labels->setLabelTag( '[Title]', '[userName]', $name);
        
        $semesterJumpLinkSelectedValue = $this->linkValues['semesterJumpLink'].$this->semester_id;

        // NOTE:  this parent method prepares the $this->template with the 
        // common Display data.  
        $this->prepareTemplate($path);
        
        $this->template->set( 'semesterJumpLinkSelectedValue', $semesterJumpLinkSelectedValue );
        
        $campusPRCArray = array();
        $pageTotal = 0;
        
        // get a list of all the campuses
        $campusManager = new RowManager_CampusManager();
        $campusManager->setSortOrder('campus_desc');
        $campusList = $campusManager->getListIterator( );
        while ( $campus = $campusList->getNext() )
        {
            $totalPRC = 0;
            $item = array();
            $item['desc'] = $campus->getDesc();
            $item['link'] = '#';
            $prcManager = new RowManager_PRCManager();
            $prcManager->setSemester( $this->semester_id );
            $prcManager->setCampus( $campus->getID() );
            $prcList = $prcManager->getListIterator();
            while ( $prcList->getNext() )
            {
                $totalPRC++;
            }
            $item['totalPRC'] = $totalPRC;
            $pageTotal += $totalPRC;

            $campusPRCArray[] = $item;
        }
        
        $this->template->set('campusPRCArray', $campusPRCArray );
        $this->template->set('pageTotal', $pageTotal );
        
        // semester list
        $jumpLink = $this->linkValues['semesterJumpLink'];
        $semesterArray = array();
        $semesterManager = new RowManager_SemesterManager();
        $semesterListIterator = $semesterManager->getListIterator();
        $semesterListIterator->setFirst();
        while( $semesterListIterator->moveNext() )
        {
            $semesterObject = $semesterListIterator->getCurrent(new RowManager_SemesterManager());
            $semesterArray[$jumpLink.$semesterObject->getID()] = $semesterObject->getLabel();
        }
        // echo '<pre>'.print_r($campusArray, true ).'</pre>';
        $this->template->set( 'list_semester_id', $semesterArray );

        // uncomment this line if you are creating a template for this page
		$templateName = 'page_PRC_ReportByCampus.php';
		// otherwise use the generic site template
		//$templateName = '';
		
		return $this->template->fetch( $templateName );
        
    }
	
}

?>